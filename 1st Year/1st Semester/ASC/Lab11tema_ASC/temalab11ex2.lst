     1                                  bits 32     
     2                                  global start        
     3                                  ;extern transformare
     4                                  extern exit,scanf,printf
     5                                  import scanf msvcrt.dll  
     6                                  import printf msvcrt.dll        
     7                                  import exit msvcrt.dll  
     8                                  %include "modullab11ex2.asm"
     1                              <1> bits 32 
     2                              <1>  
     3                              <1> global transformare
     4                              <1> %ifndef  _MODULLAB11EX2_ASM_ 
     5                              <1> %define  _MODULLAB11EX2_ASM_ 
     6                              <1> segment code use32 class=code
     7                              <1>     transformare:
     8 00000000 FC                  <1>         cld
     9 00000001 BB00000000          <1>         mov ebx,0
    10                              <1>         repeta:
    11 00000006 B800000000          <1>             mov eax,0
    12 0000000B AC                  <1>             lodsb
    13 0000000C 3C00                <1>             cmp al,0
    14 0000000E 740F                <1>             je sfarsit
    15 00000010 2C30                <1>             sub al,'0'
    16 00000012 F6250A000000        <1>             mul byte[10]
    17 00000018 6689C3              <1>             mov bx,ax
    18 0000001B 00C3                <1>             add bl,al
    19 0000001D EBE7                <1>             jmp repeta  
    20                              <1>         sfarsit:
    21 0000001F 89D8                <1>         mov eax,ebx
    22 00000021 AB                  <1>         stosd
    23 00000022 C3                  <1>         ret  
    24                              <1>     
    25                              <1> %endif
    26                              <1>     
     9                                  
    10                                  segment data use32 class=data
    11 00000000 00000000<rept>              sir times 10 dd 0
    12 00000028 00000000<rept>              sir_memorie times 10 dd 0
    13 00000050 446174692073697275-         mesaj db "Dati sirul: ",0
    13 00000059 6C3A2000           
    14 0000005D 257300                      format db "%s",0
    15 00000060 256400                      format_afisare db "%d",0
    16                                  
    17                                      
    18                                  ;Se cere sa se citeasca de la tastatura un sir de numere, date in baza 10 ca numere cu semn (se citeste de la tastatura un sir de caractere si in memorie trebuie stocat un sir de numere).
    19                                  segment code use32 class=code
    20                                      start:
    21 00000023 68[50000000]                    push dword mesaj
    22 00000028 FF15[00000000]                  call [printf]
    23 0000002E 83C404                          add esp,4*1
    24                                          
    25 00000031 68[00000000]                    push dword sir
    26 00000036 68[5D000000]                    push dword format
    27 0000003B FF15[00000000]                  call [scanf]
    28 00000041 83C408                          add esp,4*2
    29                                  
    30 00000044 BE[00000000]                    mov esi,sir
    31 00000049 BF[28000000]                    mov edi,sir_memorie
    32 0000004E E8ADFFFFFF                      call transformare
    33                                                  
    34                                          ;push dword sir_memorie
    35                                          ;push dword format_afisare
    36                                          ;call [printf]
    37                                          ;add esp,4*2
    38                                          
    39 00000053 6A00                            push    dword 0      
    40 00000055 FF15[00000000]                  call    [exit]    
    41                                          
    42                                       
